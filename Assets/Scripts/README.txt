# 6自由度座椅控制系统

这个Unity项目用于控制6自由度（6DOF）座椅平台，通过UDP协议发送控制命令。

## 功能特点

1. 支持通过UDP协议与座椅控制器通信
2. 提供两种协议格式：EB 90 01（32字节）和EB 90 02（123字节）
3. 实时可视化座椅运动状态
4. 完整的UI控制界面，包括六个自由度的滑块控制
5. 预设动作功能（前进、后退、左转、右转）
6. 内置UDP通信日志系统，便于调试和分析

## 使用方法

### 基本设置

1. 打开场景 `Assets/Scenes/SampleScene`
2. 确保场景中包含以下组件：
   - ChairController
   - UIManager
   - UDPLogger

### 连接座椅

1. 输入座椅控制器的IP地址（默认：192.168.0.15）
2. 输入端口号（默认：20000）
3. 点击"连接"按钮

### 控制座椅

使用六个滑块分别控制座椅的各个自由度：
- 俯仰(Pitch)：前后倾斜
- 横滚(Roll)：左右倾斜
- 航向(Yaw)：左右旋转
- 横向(Sway)：左右移动
- 纵向(Surge)：前后移动
- 垂向(Heave)：上下移动

也可以使用预设动作按钮快速测试常用动作。

### 切换协议类型

如果座椅无响应，可以尝试切换协议类型：
- EB 90 01（32字节）：默认协议
- EB 90 02（123字节）：备选协议

点击"切换协议"按钮即可在两种协议之间切换。

### 查看日志

日志文件保存在：`[用户数据文件夹]/[项目名]/ChairLogs/` 目录下，格式为：
- `UDPLog_[时间戳].txt`

日志记录了所有发送和接收的数据包，便于调试和分析通信问题。

## 开发说明

### 主要脚本

- `ChairController.cs`：核心控制脚本，负责UDP通信和座椅控制
- `UIManager.cs`：UI界面管理器，处理用户输入和界面更新
- `UDPLogger.cs`：UDP通信日志记录器，记录和分析通信数据

### 自定义开发

若要调整协议格式或参数范围，可修改以下内容：
- `ChairController.cs` 中的 `CreateEB9001Packet()` 和 `CreateEB9002Packet()` 方法
- 安全限制参数 `maxPitch`, `maxRoll` 等

## 协议参考

基于对日志文件的分析，座椅使用以下协议格式：

1. EB 90 01 协议（32字节）：
   - 头部：EB 90 01 0A
   - 参数：Pitch(4-7), Roll(8-11), Yaw(12-15), Sway(16-19), Surge(20-23), Heave(24-27)
   - 尾部：4字节校验码或预留

2. EB 90 02 协议（123字节）：
   - 头部：EB 90 02 7B
   - 参数分布在不同位置，格式较为复杂
   - 尾部：FF 0A 0A 0A 